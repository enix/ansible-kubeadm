{%- if _valid_bootstrap_tokens|length == 0 -%}
{#- Use a dummy token for dry-run if it didn't exist -#}
{%- set token_data = {"token-id": "ZHJ5LXJ1biB0b2tlbi1pZAo=", "token-secret": "ZHJ5LXJ1biB0b2tlbi1zZWNyZXQK"} -%}
{%- else -%}
{%- set token_data = (_valid_bootstrap_tokens|first).data -%}
{%- endif -%}
---
{% if _target_kube_version is version("1.22", ">=") -%}
apiVersion: kubeadm.k8s.io/v1beta3
{% else %}
apiVersion: kubeadm.k8s.io/v1beta2
{% endif %}
kind: JoinConfiguration
discovery:
  bootstrapToken:
    token: "{{ token_data['token-id']|b64decode }}.{{ token_data['token-secret']|b64decode }}"
    caCertHashes:
    - "sha256:{{ (ca_cert_hash|default('dry-run-sha256')) }}"
{% if control_plane_endpoint %}
    apiServerEndpoint: "{{ control_plane_endpoint }}"
{% else %}
    apiServerEndpoint: "{{ hostvars[cp_node].ansible_default_ipv4.address }}:6443"
{% endif %}
{% if _kubelet_node_ip is defined %}
nodeRegistration:
  kubeletExtraArgs:
    node-ip: "{{ _kubelet_node_ip.ipv4.address }}"
{% endif %}
{% if _control_plane %}
controlPlane:
  certificateKey: "{{ cert_encryption_key }}"
{% if _kube_apiserver_advertise_address is defined %}
  localAPIEndpoint:
    advertiseAddress: "{{ _kube_apiserver_advertise_address.ipv4.address }}"
{% endif %}
{% endif %}
{% if _control_plane and enable_kubeadm_patches|bool and _target_kube_version is version("1.22", ">=") -%}
patches:
  directory: {{ kubeadm_patch_dir }}
{%- endif %}
