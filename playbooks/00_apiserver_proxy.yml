---
- hosts: '{{ kube_cp_group|default("kube_control_plane") }}:{{ kube_worker_group|default("kube_workers") }}'
  gather_facts: false
  any_errors_fatal: '{{ any_errors_fatal|default(true) }}'
  tags: ['always', 'plugins']
  roles:
    - role: hooks_plugins_register

- hosts: '{{ kube_cp_group|default("kube_control_plane") }}'
  any_errors_fatal: '{{ any_errors_fatal|default(true) }}'
  vars:
    _control_plane: true
  pre_tasks:
    - name: 'Fail if not all master in the specified limit'
      fail:
        msg: 'Not all control_plane provided, ajust --limit to provid all control_plane'
      when: groups[kube_cp_group|default("kube_control_plane")]|difference(ansible_play_hosts)|length > 0
  roles:
    - role: find_ip

- hosts: '{{ kube_cp_group|default("kube_control_plane") }}:{{ kube_worker_group|default("kube_workers") }}'
  any_errors_fatal: '{{ any_errors_fatal|default(true) }}'
  pre_tasks:
    - include_role:
        name: hooks_call
      vars:
        kubeadm_hook_list: ['pre_apiserver_proxy']
  roles:
    - role: apiserver_haproxy
      when: apiserver_proxy_use_docker|bool in [none, false]
    - role: apiserver_docker
      when: apiserver_proxy_use_docker|bool == true
  tasks:
    - include_role:
        name: hooks_call
      vars:
        kubeadm_hook_list: ['post_apiserver_proxy']

- hosts: 'haproxy_upgrade_group:&{{ kube_cp_group|default("kube_control_plane") }}'
  serial: '{{ upgrade_cp_serial|default(1) }}'
  any_errors_fatal: '{{ any_errors_fatal|default(true) }}'
  pre_tasks:
    - include_role:
        name: hooks_call
      vars:
        kubeadm_hook_list: ['pre_proxy_upgrade_haproxy']
  roles:
    - role: apiserver_haproxy_upgrade
  tasks:
    - include_role:
        name: hooks_call
      vars:
        kubeadm_hook_list: ['post_proxy_upgrade_haproxy']

- hosts: 'haproxy_upgrade_group:&{{ kube_worker_group|default("kube_workers") }}'
  serial: '{{ upgrade_worker_serial|default(1) }}'
  any_errors_fatal: '{{ any_errors_fatal|default(true) }}'
  pre_tasks:
    - include_role:
        name: hooks_call
      vars:
        kubeadm_hook_list: ['pre_proxy_upgrade_haproxy']
  roles:
    - role: apiserver_haproxy_upgrade
  tasks:
    - include_role:
        name: hooks_call
      vars:
        kubeadm_hook_list: ['post_proxy_upgrade_haproxy']
